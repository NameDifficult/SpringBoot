spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/springboot?serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver

    druid:
      filters: stat,wall,slf4j    # 开启功能
      aop-patterns: com.example.boot_web2.*  #监控springBean
      stat-view-servlet:        # 配置监控页
        enabled: true
        login-username: admin
        login-password: admin

      web-stat-filter:        # 监控web
        enabled: true
        urlPattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

      filter:
        stat:
          log-slow-sql: true
          enabled: true
        wall:
          enabled: true
          config:
            drop-table-allow: false
  aop:
    auto: false

    #配置服务器地址，此服务作为客户端 指标数据能被指定端口服务器接收到
  boot:
    admin:
      client:
        url: http://localhost:8899



# redis配置
#  redis:
#    host: r-bp13mfyu4cxyieyivlpd.redis.rds.aliyuncs.com
#    port: 6379
#    password: fjl:FJLfjl520333
#    client-type: jedis
#    jedis:
#      pool:
#        max-active: 10





# 默认开启
#    filters: wall,stat
#    max-active: 100


# 配置mybatis规则
mybatis:
#  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true  #开启驼峰命名



# management 是所有actuator的配置
management:
  endpoints:
    enabled-by-default: true  # 默认开启所有监控端点
    #以web方式暴露所有端点
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


